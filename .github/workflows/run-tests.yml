name: Run tests

on: push

jobs:
  install-dependencies:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get ROUNDS version
        id: rounds-version
        uses: ./.github/actions/rounds-version

      - name: Cache ROUNDS
        id: cache-rounds
        uses: actions/cache@v2
        with:
          path: ./rounds_install
          key: ROUNDS-${{ steps.rounds-version.outputs.version }}

      - name: Install SteamCMD
        if: steps.cache-rounds.outputs.cache-hit != 'true'
        uses: CyberAndrii/setup-steamcmd@v1

      - name: Install ROUNDS
        if: steps.cache-rounds.outputs.cache-hit != 'true'
        run: |
          steamcmd +@sSteamCmdForcePlatformType windows +force_install_dir "$env:GITHUB_WORKSPACE\rounds_install" +login ${{ secrets.STEAM_USERNAME }} ${{ secrets.STEAM_PASSWORD }} +app_update 1557740 validate +exit
          
          if (-not (Test-Path "$env:GITHUB_WORKSPACE\rounds_install\Rounds_Data\Managed"))
          {
              throw [System.IO.FileNotFoundException] "ROUNDS installation not found."
          }

      - name: Prepare MapsExtended dependencies
        if: steps.cache-rounds.outputs.cache-hit != 'true'
        run: |
          $temp = "./temp"
          New-Item -Path "$temp" -ItemType Directory

          Invoke-WebRequest -Uri "https://thunderstore.io/package/download/BepInEx/BepInExPack_ROUNDS/5.4.1900/" -OutFile "$temp/bepinex.zip"
          Invoke-WebRequest -Uri "https://thunderstore.io/package/download/willis81808/MMHook/1.0.0/" -OutFile "$temp/mmhook.zip"
          Invoke-WebRequest -Uri "https://thunderstore.io/package/download/willis81808/UnboundLib/3.2.10/" -OutFile "$temp/unboundlib.zip"

          7z x $temp/bepinex.zip -o"$temp/BepInExRaw"
          mv "$temp/BepInExRaw/BepInExPack_ROUNDS/*" "./rounds_install"

          7z x $temp/mmhook.zip -o"./rounds_install/BepInEx/plugins/mmhook"
          7z x $temp/unboundlib.zip -o"./rounds_install/BepInEx/plugins/unboundlib"

  run-tests:
    runs-on: windows-latest
    needs: [install-dependencies]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get ROUNDS version
        id: rounds-version
        uses: ./.github/actions/rounds-version

      - name: Restore ROUNDS cache
        id: cache-rounds
        uses: actions/cache@v2
        with:
          path: ./rounds_install
          key: ROUNDS-${{ steps.rounds-version.outputs.version }}

      - name: Create Config.props
        run: |
          echo "<?xml version=""1.0"" encoding=""utf-8""?><Project ToolsVersion=""Current"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003""><PropertyGroup><RoundsDir>$env:GITHUB_WORKSPACE/rounds_install</RoundsDir><BepInExDir>$env:GITHUB_WORKSPACE/rounds_install/BepInEx</BepInExDir></PropertyGroup></Project>" > Config.props

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            '3.1.x'
            '7.0.x'

      - name: Build and test
        run: |
          dotnet restore
          dotnet tool restore
          dotnet build
          dotnet surity "./rounds_install/Rounds.exe" --filter-stacktraces "FluentAssertions.* | Surity.*" --compact-stacktraces --simple-output
