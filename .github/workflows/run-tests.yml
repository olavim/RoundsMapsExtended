name: Run tests

on: push

jobs:
  install-dependencies:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache ROUNDS
        id: cache-rounds
        uses: ./.github/actions/cache-rounds

      - name: Install SteamCMD
        if: steps.cache-rounds.outputs.cache-hit != 'true'
        uses: CyberAndrii/setup-steamcmd@v1

      - name: Install ROUNDS
        if: steps.cache-rounds.outputs.cache-hit != 'true'
        run: |
          steamcmd +@sSteamCmdForcePlatformType windows +login ${{ secrets.STEAM_USERNAME }} ${{ secrets.STEAM_PASSWORD }} +force_install_dir "$env:GITHUB_WORKSPACE/rounds_install" +app_update 1557740 validate +exit

      - name: Prepare MapsExtended dependencies
        if: steps.cache-rounds.outputs.cache-hit != 'true'
        run: |
          $temp = "$env:GITHUB_WORKSPACE/temp"
          New-Item -Path "$temp" -ItemType Directory

          Invoke-WebRequest -Uri "https://thunderstore.io/package/download/BepInEx/BepInExPack_ROUNDS/5.4.1900/" -OutFile "$temp/bepinex.zip"
          Invoke-WebRequest -Uri "https://thunderstore.io/package/download/willis81808/MMHook/1.0.0/" -OutFile "$temp/mmhook.zip"
          Invoke-WebRequest -Uri "https://thunderstore.io/package/download/willis81808/UnboundLib/3.2.10/" -OutFile "$temp/unboundlib.zip"

          7z x $temp/bepinex.zip -o"$temp/BepInExRaw"
          ls $temp
          ls $temp/BepInExRaw
          mv "$temp/BepInExRaw/BepInExPack_ROUNDS/*" "$env:GITHUB_WORKSPACE/rounds_install"

          7z x $temp/mmhook.zip -o"$env:GITHUB_WORKSPACE/rounds_install/BepInEx/plugins/mmhook"<
          7z x $temp/unboundlib.zip -o"$env:GITHUB_WORKSPACE/rounds_install/BepInEx/plugins/unboundlib"

  run-tests:
    runs-on: windows-latest
    needs: [install-dependencies]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore Rounds cache
        uses: ./.github/actions/cache-rounds

      - name: Create Config.props
        run: |
          echo "<?xml version=""1.0"" encoding=""utf-8""?><Project ToolsVersion=""Current"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003""><PropertyGroup><RoundsDir>$env:GITHUB_WORKSPACE/rounds_install</RoundsDir><BepInExDir>$env:GITHUB_WORKSPACE/rounds_install/BepInEx</BepInExDir></PropertyGroup></Project>" > Config.props
          ls
          ls $env:GITHUB_WORKSPACE
          ls $env:GITHUB_WORKSPACE/rounds_install
          ls $env:GITHUB_WORKSPACE/rounds_install/Rounds_Data
          ls $env:GITHUB_WORKSPACE/rounds_install/Rounds_Data/Managed
      
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Build and test
        run: |
          dotnet restore
          dotnet tool restore
          dotnet build
          dotnet surity "$env:GITHUB_WORKSPACE/rounds_install/Rounds.exe" --filter-stacktraces "FluentAssertions.* | Surity.*" --compact-stacktraces
